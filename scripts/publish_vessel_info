#!/bin/bash
set -e
source pipe-tools-utils

THIS_SCRIPT_DIR="$( cd "$(dirname "${BASH_SOURCE[0]}")" ; pwd -P )"
ASSETS=${THIS_SCRIPT_DIR}/../assets
ARGS=( \
  SOURCE_QUERY \
  TEMP_EXTRACT_TABLE_PREFIX
  TEMP_BUCKET \
  ELASTIC_SEARCH_SERVER_URL \
  ELASTIC_SEARCH_SERVER_AUTH \
  ELASTIC_SEARCH_INDEX_ALIAS \
  ELASTIC_SEARCH_INDEX_MAPPINGS \
)

################################################################################
# Validate and extract arguments
################################################################################
display_usage() {
  echo -e "\nUsage:\n$ SOURCE_QUERY TEMP_EXTRACT_TABLE_PREFIX TEMP_BUCKET ELASTIC_SEARCH_SERVER_URL ELASTIC_SEARCH_SERVER_AUTH ELASTIC_SEARCH_INDEX_ALIAS ELASTIC_SEARCH_INDEX_MAPPINGS\n"
}

if [[ $# -ne ${#ARGS[@]} ]]
then
    display_usage
    exit 1
fi

echo "Running $0"
ARG_VALUES=("$@")
PARAMS=()
for index in ${!ARGS[*]}; do
  echo "  ${ARGS[$index]}=${ARG_VALUES[$index]}"
  declare "${ARGS[$index]}"="${ARG_VALUES[$index]}"
done
################################################################################
# Running bigquery query to generate vessel information
################################################################################
echo "Running vessel information query"
CURRENT_TIMESTAMP=$(date -u +%Y%m%d%H%M%S)
TEMP_EXTRACT_TABLE="${TEMP_EXTRACT_TABLE_PREFIX}_${CURRENT_TIMESTAMP}"
echo "${SOURCE_QUERY}" | bq --headless query \
  --destination_table ${TEMP_EXTRACT_TABLE} \
  --use_legacy_sql=false \
  --replace
if [ "$?" -ne 0 ]; then
  echo "  Unable to run vessel information query into ${TEMP_EXTRACT_TABLE}"
  exit 1
fi
echo "Extracted vessel information into ${TEMP_EXTRACT_TABLE}"

#################################################################################
## Export records to json files
#################################################################################
echo "Exporting records from $TEMP_EXTRACT_TABLE"
TEMP_PATH=gs://${TEMP_BUCKET}/pipe-vessels/${CURRENT_TIMESTAMP}
TEMP_EXTRACT_PATH=$TEMP_PATH/bq/*.json
bq --headless extract \
  --destination_format=NEWLINE_DELIMITED_JSON \
  $TEMP_EXTRACT_TABLE \
  $TEMP_EXTRACT_PATH
if [ "$?" -ne 0 ]; then
  echo "  Unable to extract ${TEMP_EXTRACT_TABLE} to ${TEMP_EXTRACT_PATH}"
  exit 1
fi
echo "Exported records from ${TEMP_EXTRACT_TABLE} to ${TEMP_EXTRACT_PATH}"

################################################################################
# Download files locally
################################################################################
echo "Downloading records from ${TEMP_EXTRACT_PATH} to local disk"
LOCAL_JSON_PATH=./data/json/
mkdir -p ${LOCAL_JSON_PATH}
gsutil -m cp ${TEMP_EXTRACT_PATH} ${LOCAL_JSON_PATH}
if [ "$?" -ne 0 ]; then
  echo "  Unable to download records data locally from ${TEMP_EXTRACT_PATH}"
  exit 1
fi
echo "  Downloaded records from ${TEMP_EXTRACT_PATH}"

################################################################################
# Load data into Elastic Search
################################################################################
echo "Loading data into Elastic Search"
cat ${LOCAL_JSON_PATH}/*.json | python -u -m pipe_vessels.elasticsearch.importer $ELASTIC_SEARCH_SERVER_URL $ELASTIC_SEARCH_SERVER_AUTH $ELASTIC_SEARCH_INDEX_ALIAS "$ELASTIC_SEARCH_INDEX_MAPPINGS"
if [ "$?" -ne 0 ]; then
  echo "  Unable to load data into Elastic Search"
  exit 1
fi
echo "Loaded data into Elastic Search"
